{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","categoryValue","setCategoryValue","onSubmit","e","preventDefault","trim","length","currentCategories","type","placeholder","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","gifObj","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAwCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAmBA,OACI,sBAAMC,SAdY,SAACC,GACnBA,EAAEC,iBAGCJ,EAAcK,OAAOC,OAAS,IAC7BR,GAAe,SAACS,GACZ,MAAM,CAAGP,GAAT,mBAA2BO,OAE/BN,EAAiB,MAMrB,SACI,uBACIO,KAAK,OACLC,YAAY,WACZC,MAAQV,EACRW,SAvBiB,SAACR,GAC1BF,EAAiBE,EAAES,OAAOF,a,QCUnBG,EAfK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAQC,EAAS,EAATA,IAE1B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCPXK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAENN,EAFM,iDAE2CO,UAAUF,GAFrD,8DAIOG,MAAOR,GAJd,cAINS,EAJM,gBAKSA,EAAKC,OALd,uBAKLC,EALK,EAKLA,KAEDC,EAAOD,EAAKE,KAAI,SAAEC,GACpB,MAAO,CACHC,GAAID,EAAOC,GACXhB,MAAOe,EAAOf,MACdC,IAAKc,EAAOE,OAAOC,iBAAiBjB,QAXhC,kBAeLY,GAfK,4CAAH,sDC6BEM,EAxBC,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAEd,ECJiB,SAAEA,GAEnB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPlB,EAAQC,GACPkB,MAAK,SAAAX,GACFS,EAAS,CACLV,KAAMC,EACNO,SAAS,SAGlB,CAAEd,IAEEe,EDbyBI,CAAcnB,GAAjCW,EAAb,EAAOL,KAAcQ,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIlB,UAAU,wCAAd,SAAwDI,IACtDc,GAAW,qBAAKlB,UAAU,UAAUC,IAAI,sIAAsIC,IAAI,aACjLgB,GAA6B,IAAlBH,EAAOzB,QAAgB,qBAAKU,UAAU,2CAA2CC,IAAI,iIAAiIC,IAAI,WACxO,qBAAKF,UAAU,YAAf,SAEYe,EAAOH,KAAK,SAAAY,GAAG,OACX,cAAC,EAAD,eAAiCA,GAAdA,EAAIV,aEoBpCW,EAjCA,WAGX,MAAoC1C,mBAAS,CAAC,sBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAUA,OACI,qCACI,yCACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6CACA,6BAEI4C,EAAWd,KAAI,SAAAR,GAAQ,OAEnB,aADA,CACC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCvBnCuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fa184904.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    \r\n    const [categoryValue, setCategoryValue] = useState('');\r\n\r\n    const categoryValueHandler = (e) => {\r\n        setCategoryValue(e.target.value);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validar categoria\r\n        if(categoryValue.trim().length > 2){\r\n            setCategories( (currentCategories) => {\r\n                return [ categoryValue, ...currentCategories ];\r\n            });\r\n            setCategoryValue('');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ submitHandler }>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Category\" \r\n                value={ categoryValue } \r\n                onChange={ categoryValueHandler }\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GifGridItem = ({title,  url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GifGridItem;\r\n","\r\nconst getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=4&api_key=trp36JabydOcMrWTsOYU4o1D0nRLPHmT`;\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(( gifObj ) => {\r\n        return {\r\n            id: gifObj.id,\r\n            title: gifObj.title,\r\n            url: gifObj.images.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n\r\n};\r\n\r\nexport {\r\n    getGifs as default\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{ category }</h3>\r\n            { loading && <img className=\"loading\" src=\"https://media3.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=0018cc8bymc5oodxul7t9g4pngus52aokh23hfjg565p499q&rid=giphy.gif&ct=g\" alt=\"Loading\" /> }\r\n            { !loading && images.length === 0 && <img className=\"noData animate__animated animate__zoomIn\" src=\"https://media1.giphy.com/media/ISOckXUybVfQ4/giphy.gif?cid=0018cc8bx3h73gt2v3gtqy6mipd4r3az2ms9lk5se76j8cz2&rid=giphy.gif&ct=g\" alt=\"NoData\" /> }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( gif => \r\n                            <GifGridItem key={ gif.id } { ...gif } />\r\n                        )\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n};\r\n\r\nexport {\r\n    useFetchGifs as default\r\n};","import React, { useState } from 'react'\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifApp = () => {\r\n\r\n    // const categories = ['Naruto', 'Seven Deadly Sins', 'Death Note'];\r\n    const [categories, setCategories] = useState(['Seven Deadly Sins']);\r\n\r\n    // const handleAdd = () => {\r\n    //     const newCategory = 'Bleach';\r\n    //     // setCategories([...categories, newCategory]);\r\n    //     setCategories( (currentCategories) => {\r\n    //         return [...currentCategories, newCategory];\r\n    //     });\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif App</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            {/* <button onClick={handleAdd} >Add Category</button> */}\r\n            {/* {categories} */}\r\n            <h3>Categories:</h3>\r\n            <ol>\r\n            {\r\n                categories.map(category => \r\n                    // <li key={category}>{category}</li>\r\n                    <GifGrid key={ category } category={ category } />\r\n                )\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifApp from './GifApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}